which(!data_municipalities$municipality_code %in% map_municipalities$mncplty_c )
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
by = join_by(mncplty_c == municipality_code))
ggplot(map_municipalities_with_data,
aes(fill = percent_vaccinated)) +
geom_sf() +
ggthemes::theme_map() +
scale_fill_continuous()
map_partitions <- st_read("../_data/shapefile/map_partitions.shp")
map_partitions <- st_read("/Users/vikrambahadur/reproducible_research/EC2024/EC2024/data/shapefile/map_partitions.shp")
ggplot() +
geom_sf(data = map_partitions,
aes(fill = partition)) +
ggthemes::theme_map()
ggplot() +
geom_sf(data = map_municipalities_with_data,
aes(fill = percent_vaccinated)) +
ggthemes::theme_map() +
scale_fill_continuous() +
geom_sf(data = map_partitions,
size = 2,
color = "red",
fill = NA)
#---------------------------------------------------------------
# creating spatial weight matrix - contiguity (i.e. common border)
municipalities_neighbours <- sfdep::st_contiguity(map_municipalities)
# lets check its structure
glimpse(municipalities_neighbours)
# converting a list of neighbours into a matrix
spatial_weights <- nb2mat(municipalities_neighbours)
# you can check if it is row standardized by default
summary(rowSums(spatial_weights))
map_municipalities_with_data$splag_percent_vaccinated <-
spatial_weights %*% as.matrix(map_municipalities_with_data$percent_vaccinated)
View(map_partitions)
ggplot() +
geom_sf(data = map_partitions,
aes(fill = partition)) +
ggthemes::theme_map()
load("../Data/got/season_1.RData")
View(season_data)
# Main R script
getwd()
# Main R script
get_script_path()
# Main R script
funr::get_script_path()
dirname(rstudioapi::getSourceEditorContext()$path)
# Main R script
LOC_CODE = dirname(rstudioapi::getSourceEditorContext()$path)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv")
search(read_csv)
search(read_csv())
search(setwd())
search(setwd
)
search(setwd)
findFn("str_replace")
healp.search()
help.search()
help.search(setwd())
help.search('arima', fields=c('name'), ignore.case=FALSE, agrep=FALSE)
help.search('reach_csv', fields=c('name'), ignore.case=FALSE, agrep=FALSE)
help.search('read_csv', fields=c('name'), ignore.case=FALSE, agrep=FALSE)
help.search('read_csv', fields=c('name'), ignore.case=FALSE, agrep=FALSE)
help.search('reach_csv')
help.search('read_csv')
available.packages()
pack <- available.packages()
pack["ggplot2","Depends"]
pack["tidyverse","Depends"]
tools::package_dependencies(packages = c(tidyverse),
recursive = TRUE)
tools::package_dependencies(packages = c('tidyverse'),
recursive = TRUE)
library(tidyverse)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv")
quotes_bitcoin <- read_csv("data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv")
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv")
# Main R script
LOC_CODE = dirname(rstudioapi::getSourceEditorContext()$path)
setwd(LOC_CODE)
library(tidyverse)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv")
head(quotes_bitcoin)
summary(quotes_bitcoin)
class(quotes_bitcoin)
colnames(quotes_bitcoin)
# "timeOpen;timeClose;timeHigh;timeLow;name;open;high;low;close;volume;marketCap;timestamp"
quotes_bitcoin <- subset(quotes_bitcoin, select = -c(timeClose, timeHigh, timeLow, name, open, high, low,volume, marketCap, timestamp))
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",sep=";")
# Main R script
LOC_CODE = dirname(rstudioapi::getSourceEditorContext()$path)
setwd(LOC_CODE)
library(tidyverse)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",sep=";")
healp(reach_csv)
help("read_csv")
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",delim=";")
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",delim="|")
View(quotes_bitcoin)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",delim=";")
quotes_bitcoin <- read.csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",delim=";")
quotes_bitcoin <- read.csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",sep=";")
head(quotes_bitcoin)
class(quotes_bitcoin)
colnames(quotes_bitcoin)
# "timeOpen;timeClose;timeHigh;timeLow;name;open;high;low;close;volume;marketCap;timestamp"
quotes_bitcoin <- subset(quotes_bitcoin, select = -c(timeClose, timeHigh, timeLow, name, open, high, low,volume, marketCap, timestamp))
head(quotes_bitcoin)
colnames(quotes_bitcoin)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",
quote = "\"", sep=";")
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",
quote = "\"")
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",
quote = "")
spec(quotes_bitcoin)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",
quote = "\"")
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",
quote = "\"", delim=";")
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",
quote = "\"", delim=";", escape_double=TRUE)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",
delim=";", escape_double=TRUE,quote = "\"")
quotes_bitcoin <- read_csv2("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",
delim=";", escape_double=TRUE,quote = "\"")
quotes_bitcoin <- read_csv2("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",
delim=";",quote = "\"")
colnames(quotes_bitcoin)
quotes_bitcoin <- read_csv2("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",
delim=";")
spec(quotes_bitcoin)
colnames(quotes_bitcoin)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv", delim = ";")
colnames(quotes_bitcoin)
# Main R script
LOC_CODE = dirname(rstudioapi::getSourceEditorContext()$path)
setwd(LOC_CODE)
library(tidyverse)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv", delim = ";")
spec(quotes_bitcoin)
colnames(quotes_bitcoin)
# Main R script
rm(list = ls())
LOC_CODE = dirname(rstudioapi::getSourceEditorContext()$path)
setwd(LOC_CODE)
library(tidyverse)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv", delim = ";")
spec(quotes_bitcoin)
colnames(quotes_bitcoin)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv")
spec(quotes_bitcoin)
colnames(quotes_bitcoin)
View(quotes_bitcoin)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv", sep=";")
# Main R script
rm(list = ls())
LOC_CODE = dirname(rstudioapi::getSourceEditorContext()$path)
setwd(LOC_CODE)
library(tidyverse)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv", sep=";")
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv")
View(quotes_bitcoin)
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",
col_select = c(timeOpen,close))
spec(quotes_bitcoin)
colnames(quotes_bitcoin)
head(quotes_bitcoin)
class(quotes_bitcoin)
colnames(quotes_bitcoin)
plot(quotes_bitcoin$close,
grid.ticks.on = "years",
grid.ticks.lty = 3,
col = "darkblue",
major.ticks = "years",
main = "B index")
str(quotes_bitcoin)
class(quotes_bitcoin$timeOpen)
quotes_bitcoin$timeOpen <- as.Date(quotes_bitcoin$timeOpen, format = "%Y-%m-%d")
class(quotes_bitcoin$timeOpen)
library(xts)
library(quantmod)
library(ggthemes)
library(dygraphs)
library(tidyverse)
library(xts)
library(quantmod)
glimpse(quotes_bitcoin)
quotes_bitcoin <-
xts(quotes_bitcoin[, -1], # data columns (without the first column with date)
quotes_bitcoin$timeOpen)  # date/time index
head(quotes_bitcoin)
str(quotes_bitcoin)
plot(quotes_bitcoin$close,
grid.ticks.on = "years",
grid.ticks.lty = 3,
col = "darkblue",
major.ticks = "years",
main = "SP500 index")
tibble(drw = quotes_bitcoin) %>%
mutate(obs = row_number()) %>%
ggplot(aes(obs, drw)) +
geom_line() +
theme_bw() +
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(z)),
caption = "source: own simulations"
)
tibble(drw = quotes_bitcoin) %>%
mutate(obs = row_number()) %>%
ggplot(aes(obs, drw)) +
geom_line() +
theme_bw() +
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations"
)
tibble(drw = quotes_bitcoin) %>%
mutate(obs = quotes_bitcoin$close) %>%
ggplot(aes(obs, drw)) +
geom_line() +
theme_bw() +
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations"
)
tibble(drw = quotes_bitcoin) %>%
mutate(obs = row_number()) %>%
ggplot(aes(x=day, drw)) +
geom_line() +
theme_bw() +
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations"
)
str(quotes_bitcoin)
tibble(drw = quotes_bitcoin) %>%
mutate(date = quotes_bitcoin$Date) %>%
ggplot(aes(date, drw)) +
geom_line() +
theme_bw() +
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations"
)
tibble(drw = quotes_bitcoin) %>%
mutate(Date = quotes_bitcoin$Date) %>%
ggplot(aes(Date, drw)) +
geom_line() +
theme_bw() +
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations"
)
tibble(drw = quotes_bitcoin) %>%
ggplot(aes(zoo::index(quotes_bitcoin), drw)) +
geom_line() +
theme_bw() +
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations"
)
plot(quotes_bitcoin$close,
grid.ticks.on = "years",
grid.ticks.lty = 3,
col = "darkblue",
major.ticks = "years",
main = "SP500 index")
plot(quotes_bitcoin$close,
grid.ticks.on = "years",
grid.ticks.lty = 4,
col = "darkblue",
major.ticks = "years",
main = "Daily Bitcoin Prices")
ggplot(aes(zoo::index(quotes_bitcoin), quotes_bitcoin)) +
geom_line() +
theme_bw() +
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations"
)
tibble(df = quotes_bitcoin) %>%
ggplot(aes(zoo::index(quotes_bitcoin), df)) +
geom_line() +
theme_bw() +
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations"
)
tibble(df = quotes_bitcoin) %>%
ggplot(aes(zoo::index(quotes_bitcoin), df)) +
geom_line() +
theme_bw() +
scale_x_date(date_breaks = "1 month", date_labels = "%b-%y")
tibble(df = quotes_bitcoin) %>%
ggplot(aes(zoo::index(quotes_bitcoin), df)) +
geom_line() +
theme_bw() +
scale_x_date(date_breaks = "1 year", date_labels = "%b-%y")
tibble(df = quotes_bitcoin) %>%
ggplot(aes(zoo::index(quotes_bitcoin), df)) +
geom_line() +
theme_bw() +
scale_x_date(date_breaks = "1 year", date_labels = "%b-%Y")
plot(quotes_bitcoin$close,
grid.ticks.on = "years",
grid.ticks.lty = 3,
col = "darkblue",
major.ticks = "years",
main = "Daily Bitcoin Prices")
xlab("") +
ylab("") +
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations"
)
xlab("") +
ylab("") +
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations"
)
xlab("") +
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations"
)
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations",
x="",
y=""
)
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations",
x="",
y=""
)
tibble(df = quotes_bitcoin) %>%
ggplot(aes(zoo::index(quotes_bitcoin), df)) +
geom_line() +
theme_bw() +
scale_x_date(date_breaks = "1 year", date_labels = "%b-%Y")
scale_x_continuous(name="Speed of cars") +
scale_y_continuous(name="Stopping distance")
scale_x_continuous(name="Speed of cars") +
scale_y_continuous(name="Stopping distance")+
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations",
x="",
y=""
)
tibble(df = quotes_bitcoin) %>%
ggplot(aes(zoo::index(quotes_bitcoin), df)) +
geom_line() +
theme_bw() +
scale_x_date(date_breaks = "1 year", date_labels = "%b-%Y")+
labs(
title = "Realization of discrete random walk with binary increments",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: own simulations",
x="",
y=""
)
tibble(df = quotes_bitcoin) %>%
ggplot(aes(zoo::index(quotes_bitcoin), df)) +
geom_line() +
theme_bw() +
scale_x_date(date_breaks = "1 year", date_labels = "%b-%Y")+
labs(
title = "Bitcoin Daily Price",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: RR 2024",
x="",
y=""
)
tibble(df = quotes_bitcoin) %>%
ggplot(aes(zoo::index(quotes_bitcoin), periodReturn(quotes_bitcoin, period="daily", type="log"))) +
geom_line() +
theme_bw() +
scale_x_date(date_breaks = "1 year", date_labels = "%b-%Y")+
labs(
title = "Bitcoin Daily Price",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: RR 2024",
x="",
y=""
)
tibble(df = quotes_bitcoin) %>%
ggplot(aes(zoo::index(quotes_bitcoin), log(quotes_bitcoin))) +
geom_line() +
theme_bw() +
scale_x_date(date_breaks = "1 year", date_labels = "%b-%Y")+
labs(
title = "Bitcoin Daily Price",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: RR 2024",
x="",
y=""
)
tibble(df = quotes_bitcoin) %>%
ggplot(aes(zoo::index(quotes_bitcoin), periodReturn(quotes_bitcoin, period="daily", type="log"))) +
geom_line() +
theme_bw() +
scale_x_date(date_breaks = "1 year", date_labels = "%b-%Y")+
labs(
title = "Log Transformed Bitcoin Price",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: RR 2024",
x="",
y=""
)
# Main R script
## Required libraries
library(xts)
library(quantmod)
library(ggthemes)
library(dygraphs)
library(tidyverse)
## Clean any local/environment variables
rm(list = ls())
## Get this script present location
LOC_CODE = dirname(rstudioapi::getSourceEditorContext()$path)
## Set it to working direcotry
setwd(LOC_CODE)
## Read bitcoin csv daily price
quotes_bitcoin <- read_csv("../data/Bitcoin_01_01_2012-04_10_2018_historical_data_coinmarketcap.csv",
col_select = c(timeOpen,close))
## We can examine structure of the resulting object:
head(quotes_bitcoin)
tail(quotes_bitcoin)
glimpse(quotes_bitcoin)
## Let’s also check the class of the Date column:
class(quotes_bitcoin$timeOpen)
## lets check structure of the whole dataset
str(quotes_bitcoin)
##Let's transform timeOpen into date:
quotes_bitcoin$timeOpen <- as.Date(quotes_bitcoin$timeOpen, format = "%Y-%m-%d")
## We have to give the format in which date is originally stored: * %y means 2-digit year, * %Y means 4-digit year * %m means a month * %d means a day
class(quotes_bitcoin$timeOpen)
head(quotes_bitcoin)
glimpse(quotes_bitcoin)
## Creating xts objects
quotes_bitcoin <-
xts(quotes_bitcoin[, -1], # data columns (without the first column with date)
quotes_bitcoin$timeOpen)  # date/time index
# Lets see the result:
head(quotes_bitcoin)
str(quotes_bitcoin)
## Finally, let’s use the ggplot2 package to produce nice visualization.
## The ggplot2 package expects data to be in long format, rather than wide format.
## Hence, first we have to convert the tibble to a long tibble:
## Plotting Actual Bitcoin Price
tibble(df = quotes_bitcoin) %>%
ggplot(aes(zoo::index(quotes_bitcoin), df)) +
geom_line() +
theme_bw() +
scale_x_date(date_breaks = "1 year", date_labels = "%b-%Y")+
labs(
title = "Actual Bitcoin Price",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: RR 2024",
x="",
y=""
)
## Plotting Log Transformed Bitcoin Price
tibble(df = quotes_bitcoin) %>%
ggplot(aes(zoo::index(quotes_bitcoin), log(quotes_bitcoin))) +
geom_line() +
theme_bw() +
scale_x_date(date_breaks = "1 year", date_labels = "%b-%Y")+
labs(
title = "Log Transformed Bitcoin Price",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: RR 2024",
x="",
y=""
)
## Plotting 1st Difference Log Operator
tibble(df = quotes_bitcoin) %>%
ggplot(aes(zoo::index(quotes_bitcoin), periodReturn(quotes_bitcoin, period="daily", type="log"))) +
geom_line() +
theme_bw() +
scale_x_date(date_breaks = "1 year", date_labels = "%b-%Y")+
labs(
title = "1st Difference Log Operator",
subtitle = paste0("Number of observations: ", length(quotes_bitcoin)),
caption = "source: RR 2024",
x="",
y=""
)
